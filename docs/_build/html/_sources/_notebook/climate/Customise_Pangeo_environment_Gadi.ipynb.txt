{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "# Customise Pangeo Environment on Gadi\n",
    "\n",
    "\n",
    "In this notebook we demonstrate\n",
    "\n",
    "- load additional modules \n",
    "- install packages not available on Gadi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The centralised Pangeo Environment on Gadi includes essential modules:\n",
    "\n",
    "- Python 3.7\n",
    "- xarray 0.14.1\n",
    "- jupyterlab  1.2.4\n",
    "- nbserverproxy  0.8.8\n",
    "- dask   2.9.1\n",
    "- distributed 2.9.1\n",
    "- dask-jobqueue 0.7.0\n",
    "- bokeh 1.4.0\n",
    "- netcdf4-python 1.5.3\n",
    "- h5py 2.10.0\n",
    "\n",
    "Users might need to load additional modules to run their own workflow. If the pacakge is not\n",
    "available on Gadi, users can install it under their own working directory. Please note, Pangeo environment should always be loaded before adding other modules or installing new modules."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Step 1: Enable Pangeo in your shell envorinment"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To enable the Pangeo environment, you can use the following command within jobs, or within an interactive environment:\n",
    "\n",
    "```\n",
    "$ module load pangeo/2019.12\n",
    "        Loading requirement: intel-mkl/2019.3.199 python3/3.7.4 hdf5/1.10.5 netcdf/4.7.1\n",
    "\n",
    "```\n",
    "Note that Pangeo has its own Python installation.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Step 2: Check if a module is available or not"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets try the **scipy** to see if it is available on Gadi.\n",
    "\n",
    "```\n",
    "(pangeo) bash-4.1$ module avil scipy\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Step 3a: Load modules if they are available on Gadi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If the module exists, it will list all the versions. Pick the one that you would like to use:\n",
    "\n",
    "```\n",
    "(pangeo) bash-4.1$ module load scipy\n",
    "```\n",
    "\n",
    "Check if the module is loaded properly:\n",
    "\n",
    "```\n",
    "(pangeo) bash-4.1$ module list\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Step 3b: Install modules if they are NOT available on Gadi"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets try the **deepgraph** to see if it is available on Gadi.\n",
    "\n",
    "```\n",
    "(pangeo) bash-4.1$ python\n",
    "Python 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 21:52:21)\n",
    "[GCC 7.3.0] :: Anaconda, Inc. on linux\n",
    "Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n",
    ">>> import deepgraph\n",
    "Traceback (most recent call last):\n",
    "  File \"<stdin>\", line 1, in <module>\n",
    "ModuleNotFoundError: No module named 'deepgraph'\n",
    ">>> exit()\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### There are multiple ways to install packages. For example, you can use install from the Python Package Index or build packges from the source. See instruction here: https://packaging.python.org/tutorials/installing-packages/#installing-to-the-user-site for appropriate option for your own perference. \n",
    "#### Please note: the packages should be installed within user's own directory"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For example, you can use pip by running:\n",
    "\n",
    "$ pip install --install-option=\"--prefix=YOUR_OWN_DIRECTORY\" <package name>\n",
    "\n",
    "Here is an example:\n",
    "\n",
    "```\n",
    "(pangeo) bash-4.1$ pip install --install-option=\"--prefix=YOUR_OWN_DIRECTORY\" deepgraph\n",
    "/apps/pangeo/2019.10/envs/pangeo/lib/python3.7/site-packages/pip/_internal/commands/install.py:243: UserWarning: Disabling all use of wheels due to the use of --build-options / --global-options / --install-options.\n",
    "  cmdoptions.check_install_build_global(options)\n",
    "Collecting deepgraph\n",
    "  Downloading https://files.pythonhosted.org/packages/fc/3e/4a34a5316a5f886b8d7a6787c24852d9e5a5ef00b4ec6af0736f681a3a58/DeepGraph-0.2.2.tar.gz (160kB)\n",
    " \t|████████████████████████████████| 163kB 4.7MB/s\n",
    "Requirement already satisfied: numpy>=1.6 in /apps/pangeo/2019.10/envs/pangeo/lib/python3.7/site-packages (from deepgraph) (1.17.2)\n",
    "Requirement already satisfied: pandas>=0.17.0 in /apps/pangeo/2019.10/envs/pangeo/lib/python3.7/site-packages (from deepgraph) (0.25.1)\n",
    "Requirement already satisfied: python-dateutil>=2.6.1 in /apps/pangeo/2019.10/envs/pangeo/lib/python3.7/site-packages (from pandas>=0.17.0->deepgraph) (2.8.0)\n",
    "Requirement already satisfied: pytz>=2017.2 in /apps/pangeo/2019.10/envs/pangeo/lib/python3.7/site-packages (from pandas>=0.17.0->deepgraph) (2019.2)\n",
    "Requirement already satisfied: six>=1.5 in /apps/pangeo/2019.10/envs/pangeo/lib/python3.7/site-packages (from python-dateutil>=2.6.1->pandas>=0.17.0->deepgraph) (1.12.0)\n",
    "Skipping bdist_wheel for deepgraph, due to binaries being disabled for it.\n",
    "Installing collected packages: deepgraph\n",
    "  Running setup.py install for deepgraph ... done\n",
    "Successfully installed deepgraph\n",
    "\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Step 4: Setup environment of the new package"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "(pangeo) bash-4.1$ export PYTHONPATH=$PYTHONPATH:YOUR_OWN_DIRECTORY/lib/python3.7/site-packages\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Step 5: Validate new Installation \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "```\n",
    "(pangeo) bash-4.1$ python\n",
    "Python 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 21:52:21)\n",
    "[GCC 7.3.0] :: Anaconda, Inc. on linux\n",
    "Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n",
    ">>> import deepgraph\n",
    ">>> exit()\n",
    "```"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}

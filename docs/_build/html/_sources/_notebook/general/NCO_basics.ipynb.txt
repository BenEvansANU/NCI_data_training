{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![logo](../../_static/images/NCI_logo.png)\n",
    "\n",
    "-------\n",
    "\n",
    "# NCO basics\n",
    "\n",
    "    \n",
    "---------"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Launch the Jupyter Notebook application\n",
    "\n",
    "**Using pre-built VDI modules:**\n",
    "\n",
    "Load the following modules:\n",
    "\n",
    "```\n",
    "    $ module load nco/4.5.3\n",
    "```    \n",
    " "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "__NCO (NetCDF Operators)__ is a suite of command-line based tools designed to facilitate manipulation and analysis of self-describing data stored in the netCDF-accessible formats, including DAP, HDF4 and HDF5. Let's begin with the <span style=\"color:red\">ncks</span> (netCDF kitchen sink) operator. This command can give an overview of a netCDF file, extract certain variables, extract certain dimensions and manipulate record dimensions. Let's use our example geophys.nc file for this example and open up a terminal.    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# View the contents of a netCDF file\n",
    "\n",
    ">ncks geophys.nc | more\n",
    "\n",
    "# View a variable\n",
    "\n",
    ">ncks -v latitude geophys.nc | more\n",
    ">ncks -v apparent_resistivity geophys.nc | more\n",
    "\n",
    "# View multiple variables\n",
    "\n",
    "ncks -v longitudetime geophys.nc | more\n",
    "\n",
    "# View a variable over some dimension subsets\n",
    "\n",
    "ncks -v apparent_resistivity -d lat,5,7 -d period,1,2 -d lon,55,57 geophys.nc | more "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<span style=\"color:red\">ncks</span> can also output data from an input file into an output file:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "ncks -v latitude,longitude geophys.nc -O grid.nc "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "ncks -v apparent_resistivity -d lat,5,7 -d period,1,2 -d lon,55,57 geophys.nc -O appres.nc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can look at the <span style=\"color:red\">ncrcat</span> and <span style=\"color:red\">ncecat</span> commands. These concatinate multiple files together into a single file. Use <span style=\"color:red\">ncrcat</span> when there is a record dimension (e.g. concatinating multiple daily files into one monthly file) and <span style=\"color:red\">ncecat</span> when there in no record dimension - a new record dimension will be created."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "ncrcat file1 file2 -O outputfile"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Test <span style=\"color:red\">ncrcat</span> and <span style=\"color:red\">ncecat</span> on some files you are interested in."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Other operators include:\n",
    "- __ncap2__: netCDF Arithmetic Processor\n",
    "- __ncatted__: netCDF Attribute Editor\n",
    "- __ncbo__: netCDF Binary Operator\n",
    "- __nces__: netCDF Ensemble Statistics\n",
    "- __ncflint__: netCDF File Interpolator\n",
    "- __ncra__: netCDF Record Averager\n",
    "- __ncwaa__: netCDF Weighted Averager\n",
    "\n",
    "Try these operators out on your netCDF files! For help on a particular operator, type <span style=\"color:red\"> man operator </span> (e.g. man ncbo)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
